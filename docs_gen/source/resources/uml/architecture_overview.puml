@startuml
actor actor [
WatchTower API,
acting as API REST
user.
]

component router [
Platform Team
Router
]
note left
    Networking Component for routing the
    incomming requests based on its Host
    and domain information.
    This might react specifically for the
    internal Load Balancer available under
    ""http://miris-preproduction.watchtower.services.int""
end note


database  opensearch [
OpenSearch
Serverless
]

component api [
Miris API
]
note left
    Standard API Rest for the service
    managment. Available under
    ""/v1/docs""
end note


component consumer [
Miris Consumer
]
note left
    In bulk Consumer, receive a command
    processes it and save the generation
    in the repository.
end note

component langchain [
LangChain
]
note right
    LangChain acts as the wrapper for
    interacting to the LLM Models, such
    OpenIA, Azure, etc..
end note


queue commands [
Generations
Commands Queue
]
note left
    Service bus
    channel, for generating
    and consuming ""GenerationCommand""
    messages.
end note



actor --> router
boundary async
router --> api
api --> commands
api --> opensearch
consumer --> opensearch
consumer --> langchain
api --> langchain
commands --> consumer
commands -[dotted]- async

@enduml

