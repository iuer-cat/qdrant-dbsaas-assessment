from abc import ABC, abstractmethod
from typing import NoReturn

from gatekeeper.domain.value_objects.request import ProxyRequest
from nexus.core.domain.entities.db_cluster import DBCluster


class RoutingRepository(ABC):
    """
    DDD Port used to decouple different persistence implementations. This
    interface allows the system to abstract the details of how data about
    Qdrant clusters is stored and retrieved.
    """

    @abstractmethod
    def get_by_endpoint(
            self,
            endpoint: str,
    ) -> DBCluster:
        """
        Retrieves a DBCluster instance from the repository using an endpoint
        generated by Orion during the deployment of a Qdrant cluster.

        :param endpoint: str - The endpoint associated with a Qdrant cluster.
        :return: DBCluster - The database cluster information corresponding
                 to the provided endpoint.
        """

        raise NotImplementedError()


class ReverseProxy(ABC):
    """
    DDD Port used to define the business rules related to the reverse proxy
    functionality employed in the prototype. This interface encapsulates the
    operations necessary to manage request interception and modification.
    """

    @abstractmethod
    def intercept_request(self, request: ProxyRequest) -> ProxyRequest:
        """
        Intercepts and modifies a given request. This method is expected to
        change the destination host and port (usually to 6333), and replace
        the api-key with the one internally valid for the Qdrant Cluster.

        :param request: ProxyRequest - The original request to be intercepted.
        :return: ProxyRequest - The modified request after interception.
        """
        raise NotImplementedError()

    @abstractmethod
    def run(
            self,
            port : int,
    ) -> NoReturn:
        """
        Starts the reverse proxy service on the specified port.

        :param port: int - The port number on which the reverse proxy will operate.
        :return: NoReturn - This method does not return; it runs indefinitely.
        """
        raise NotImplementedError()